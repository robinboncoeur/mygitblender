##################
Installation Guide
##################

********************
About Figure Shaders
********************

**FigureShaders** is a script to give humanoid figures imported into Blender: skin, eyes and mouth shaders using an image set. (These image sets are usually provided by the figure or character maker.)

The script runs in a panel [ T ] in the context of the the 3D Viewport window.

Currently - as of 11-May-2018 - the most recent version is 0.6.0. The Principled Shader Node is probably not the best approach for rendering skin, but it is easy to work with and will give decent results until a more sophisticated note set can be devised.

**FigureShaders** requires Blender 2.79 or newer to work properly, largely because it takes advantage of a new shader node called PrincipledShader. Download the current version of Blender at `Blender.org <https://www.blender.org/download/>`_.


============
What You Get
============

The current version of this script is comprised of three files:

   * \__init__.py: contains the part of the script to create the panel sections and read the CSVs

   * figure_defs.py: dictionary (definitions) of material slot names and material types (skin / eyes / etc)

   * make_shader.py: creates the node sets to populate the material zones

These files live in your scripts/addons folder after installation in a folder called **make_shaders**: Blender will install the folder and files from the \make_shader.zip file, as noted above.
In the course of using the script, the use will generate the following files when the user clicks on the associated [Save] button:

   * \parm_list.csv <-- the Princip Shader [Save] button creates this file in the .blend folder

   * \image_list.csv  <-- the Figure Images [Save] button creates this file in the images folder

These files (CSVs) need to exist in their respective final folders -- so therefore, need to be created by the script -- for the script to work. See the `usage page <https://github.com/robinboncoeur/FigureShaders/wiki/Usage>`_ for instructions on how to create these files and make the shaders.

This script has been designed and should work for the Antonia, Victoria4, Dawn and Mariko figures. The only figure that has not undergone extensive testing has been Mariko. If you want other figures adding, please drop me a line (under **Issues**, above) and if I have that figure I'll try to add it to the **figure_defs.py** file. Or: feel free to edit this file. This software is open-source; you're free to edit, chop and change all you want, as long as you observe the terms of GPL3. Be keen to see if you can get it working on another figure!

Remember, this is open-source software: if you break it, you get to keep both pieces. üòÅ 

Please contact me if you run into any dramas at robinseahahn at gmail dot com, or (preferably) raise an issue under `Issues <https://github.com/robinboncoeur/FigureShaders/issues>`_.


=========================
Installation Instructions
=========================

   * Unzip (de-archive) the FigureShaders-master.zip file

   * Open Blender

   * To install the FigureShader script:

      1. File -> User Preferences -> Add-Ons tab

      2. At the bottom of this dialogue, click on Install From File...

      3. Navigate to where you downloaded the zip file and select the **make_shaders.zip file**, within the unzipped folder FigureShaders folder. Click 'Install from File...'

      4. Browse your add-ons - click on 'User' under 'Categories' - and find the add-on. It is called 'Material: Shaders for Imported Figures'. Tick the box on the right to activate it. **(If this does not appear, check in the scripts/addons/ folder for the existence of a make_shaders folder, and that all these files are within that folder).**




***********************
How to Use FigureShader
***********************

===============
Getting Started
===============

To find the FigureShader panel in Blender: this panel is identifiable in the Tools Panel [T] section of the 3D Viewport. The sideways tab will be labeled '**FigureShader**'.

If this is a new blender file with only the default cube, delete the cube and import your figure. To do so, I suggest the following approach. From the menu, select File -> Import -> Wavefront (obj), navigate to your figure, select the OBJ (not the MTL) and chose the following Import settings:

   * Untick Smooth Groups and untick Lines and everything in 'Split By'

   * Tick 'Keep Vert Order' and tick 'Poly Groups'

Note: It's a good idea to save these settings. Next to the Operator Presets dropdown are plus [+] and minus [-] buttons:

   * after you've made your selections for import settings, click [+]

   * in the Operator Preset dialog, give the Preset a name -- I saved mine as 'Poser'

   * click [OK]

From then on, to import an OBJ, select your settings from the operator preset dropdown. Bear in mind you only need to select your settings once per Blender session, but you will need to select it at least once when you first start a session and wish to import an OBJ.

   * Click [Import OBJ] to import the file

   * Click on the figure in the scene

   * press [S] (for scale) -- type 10 (Poser's scale is woefully tiny!) to increase the scale
 
Note: You will want to set Scale back to 1 for the imported object, in case you want to sim cloth or anything of that sort:

   * press [Ctrl][A]

   * in the 'Apply' dialogue select 'Scale' to set the object back to 1

This will not resize your figure: it will only reset the scale.


======================
The FigureShader Panel
======================

Press [T] to open the panel. FigureShader comes in two sections: the "Princip Shader" (short for "Principled Shader") settings section:


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute21b.png


and the "Figure Images" settings section:


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute22b.png


At the top of each section next to the name is a triangle/arrow-tip: clicking on the triangle will collapse or display the section.


===============================
Creating the parm_list.csv File
===============================

After you have saved your .blend file, locate the [Load] and [Save] buttons at the top of the the Princip Shader settings section:

Click on the folder icon near the "-1- Find image files" textbox:


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute23b.png


or the "Image files location" textbox in the Image Settings section, they both work the same way, and when one populates, so will the other.
Note: *Until you have saved the .blend file with a name to a specific location, [Load] and [Save] buttons in both sections, the [Clear] button and the [Apply Shaders] button are disabled.*

Navigate to the folder containing your figure's texture image files.


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute24.png


Note: in the image below I have the image tile option selected (upper-red-arrow) and that the folder will appear in the "Recent" box, which makes finding that folder much easier:


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute25a.png


It is very important to de-select the "Relative Path" tickbox when selecting the image folder. The script will not run properly when it tries to use Blender's relative path.


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute25b.png


In the Princip Shader section, click on [Save].


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute26b.png


This will create a parm_list.csv file in the folder your .blend file is saved in, with a path statement to the images folder and the Principled Shader settings.


================================
Creating the image_list.csv file
================================

In the Figure Images setting section of the panel, if you haven't already done so, follow the above steps to navigate to an images folder. **(The first time you do this, there will be no image_list.csv file to load information from, so these steps are going to create that file)**.

Click on the folder icon next to the empty field next to "Head-Clr":


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute27b.png


In the "Recent" section of the Navigation window, you will see the folder name you recently navigated to - click on that folder name to display a list of the images in that folder:


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute28.png


Select the appropriate image name for that region:


.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute29.png


The name (and path) to that image will now show in the textbox. 

Repeat these steps for each region and image type (colour, bump and specular). Leave blank those fields for which there is no image: the script only requires a colour field and can manage without a bump or specular map.

Click on the [Save] button to create an image_list.csv file in that folder.


====================
Creating the Shaders
====================

Once you've selected the images:

  * Select Shader Type: only the Principled SSS works at this point.

  * Select the target object file (the figure you are trying to apply a shader to) under "Figure to paint:". 

  * To identify which figure that object is based on, select the figure type name under "Figure Type:".

  * Finally, click on Apply Shaders.

Currently, FigureShaders supports these core figures:

   * Victoria4

   * Dawn

   * Mariko

   * Antonia

Note: Principled Shader setting defaults have been arbitrarily set - these have yielded reasonable results. You will almost certainly find better settings, which is the whole point of sharing this. Remember: *until you save your .blend file -- giving it a name -- the 'Apply Shaders' button will remain disabled*.




**************************
A Brief Discussion on CSVs
**************************

*Please note: editing csv files in the fashion described on this page is NOT the recommended way to either  create or update either file. I include this merely as it is possible to do, but with heaps of caveats. Proceed at your own risk.*


=============
How They Work
=============

Although it is preferable to allow FigureShader to create and edit the parm_list.csv and image_list.csv files, you may wish to do so yourself manually. **Please exercise caution if you do so: a corrupt .csv can cause FigureShader (or even Blender itself) to crash.**

If you're game to go ahead, find the .csv files: **image_list.csv** and **parm_list.csv** in your unzip folder. Copy the image_list.csv file to each skin-texture image folder. 

You will need to edit each file before FigureShader can use it. In Windows and Linux use either a plain text editor or in a spreadsheet program such as Excel or LibreOffice Calc (free). On the Mac, edit these files in LibreOffice. See notes below on how and why LibreOffice is recommended for the Mac.

The **image_list.csv** file should look something like this when you've finished editing (using Antonia textures as an example):

============= ===========================
  Mat Name        Material Image
============= ===========================
"clrALimb",   "ToniPArms.jpg"             
"clrLLimb",   "ToniPLegs.jpg"           
"bmpALimb",   "ToniPArmsBUMP.jpg"       
"bmpLLimb",   "ToniPLegsBUMP.jpg"       
"spcALimb",   "ToniPArmsSPEC.jpg"       
"spclLimb",   "ToniPLegsSPEC.jpg"       
"clr\_Body",   "ToniPBody.jpg"           
"bmp\_Body",   "ToniPBodyBUMP.jpg"       
"spc\_Body",   "ToniPBodySPEC.jpg"       
"clr\_Face",   "ToniPHead.jpg"           
"bmp\_Face",   "ToniPHeadBUMP.jpg"       
"spc\_Face",   "ToniPHeadSPEC.jpg"       
"clr\_Eyes",   "ToniPEyesAmber.jpg"      
"clrMouth",   "ToniPMouthparts.jpg"     
"bmpMouth",   "ToniPMouthpartsBUMP.jpg" 
"clr\_Lash",   "ToniPLashFakeTRANS.png"  
============= ===========================

The two columns represent the name the script uses to identify the image, and the name of the image file itself. If editing this file, only ever edit the names of the images (the second column): the field names are used by the script and so must not be changed. If you are using a plain-text editor such as Notepad or gEdit, be sure to respect the double-quotes (""): they need to exist for every image and field name. If you are using a spreadsheet program to edit this csv, be sure to save it out as type .csv, and not as .xls or .ods. For Mac and Linux, capitals count: an 'a' is not the same as an 'A'. Windows isn't as fussy.


==============
An Observation
==============

Editing .csv files on the Mac using TextEdit.app can / probably-will corrupt your .csv, as the **TextEdit.app** on the Mac tends to mess with double-quotes. Microsoft Excel for the Mac appears to have the same issues. LibreOffice, on the other hand, respects double-quotes and will save your .csv correctly **if** you do the following:

   * Save As

   * tick the "Edit Filter Settings" tickbox

   * Save over your file when prompted (Replace)

   * then in the next dialogue, make sure the Text Delimiter is a double-quote

   * **very important** -- the 'Quote all text cells' tickbox is selected (ticked)

Blender and the FigureShaders script will now read the file correctly.)

Optional: copy the **parm_list.csv** file to the folder containing the .blend file that will invoke the script. If you are creating a new .blend file and don't know where it is going to end up, you can install **FigureShader** anyway, but the script will not run until:

   * you've saved the file to some location with a name

   * you've created (or edited and saved) a parm_list.csv file to that location

Be sure to edit this file prior to running the script. An edited file (for Linux) will look something like this:

=============== ===================================================================
 Variable         Value
=============== ===================================================================
"img\_path",     "/home/robyn/Documents/Blender/Projects/AllTextures/AllSkin/V4/"     
"fl01\_sssval",  ".180000"                                                         
"fl02\_sssrad",  ".220000"                                                         
"fl05\_spcamt",  ".150000"                                                         
"fl06\_spcruf",  ".850000"                                                         
"fl11\_sheenv",  ".120000"                                                         
"fl14\_iorval",  "1.86000"                                                         
=============== ===================================================================


=========================
To Edit **parm_list.csv**
=========================

Open it in a pure-text editor or spreadsheet programme, as explained above. The two columns represent the parameter key: this first column contains names used by the script, so they must not be changed. The second column holds, among other values, then fully-qualified path to your images folder as well as PrincipledShader parameter values.

Note: I tend to keep my textures files together in a sub-folder called "AllSkin" in my "AllTextures" folder in the main "Projects" folder that has all my Blender projects in it. This cuts down on redundant files everywhere and makes it easy for scripts (and Blender itself) to find stuff. The **parm_list.csv** file assumes this sort of structure: of course, you can always just replace the existing images folder path to the path location of your images. The current entry is just an example and is almost definitely not a valid path to your files, since it is unlikely your name is Robyn, nor would your computer be set up exactly like mine. Thus, you will need to replace the existing path statement with a fully-qualified path designating your image texture files' location. As you can see from the example, an example of a fully-qualified path for Linux would be:

   /home/robyn/Documents/Blender/Projects/AllTextures/AllSkin/Antonia/

or, for the Mac:

   /Volumes/500GB/Blender/Projects/AllTextures/AllSkin/Antonia/

or, for Windows:

   E:\\MyRuntime\\runtime\\textures\\VendorName\\ImagesFolder\\Character\\

Note the closing forward slash [ / ] for Linux-Mac and back-slash [ \\ ] for Windows: these are important and need to be appropriate for your system **as well as at the end of the path statement**. Again, if you are using a plain-text editor such as Notepad or gEdit, be sure to respect the double-quotes and commas: they need to exist for each value.




*******************
Caveats and Gotchas
*******************

Please note: this page explains issues and how to resolve them in FigureShader versions older than 0.6.0. As Blender is getting better and better and new nodes are popping up on the horizon all the time, my focus is to stay in step with what's new and not so much to support old, far-less-capable versions of FigureShader. 


===========================
FigureShader 0.5x Behaviour
===========================

After some basic error checking, the script will paint a fairly basic shader on material zones of your figure, including eyelashes and teeth. If you have material zones in the figure that aren't in the list for that figure, those zones are ignored. 

Selecting the wrong base figure will result in no shaders being painted on your figure.

The script will detect some basic issues and display them in a "Please note" dialogue:

.. image:: http://www.tightbytes.com/Blender/Wiki/FigShTute03a.png

This dialogue is a bit temperamental: expect that clicking the 'OK' button will not close the dialogue; moving the cursor away from the dialogue afterwards will.

The script currently traps for:

	1. missing parm\_list.csv - meant to be in the .blend file's folder
	2. missing image\_list.csv - meant to be in the images folder
	3. missing or misspelt image file, referenced in the image\_list.csv file: file name is identified
	4. missing double-quote ( " ) in either the parm\_list.csv or image\_list.csv file
	5. invalid path statements in the parm\_list.csv file

More issues could be managed this way as users identify them.


==================
Invalid Path Issue
==================

For issue # 5, the problem is likely an old path_list.csv version. The old version included two path entries with two keys: img_path and csv_path.


======================
Cross-Platform Support
======================

This script has currently been tested in Linux (Mint Cinnamon 18.x), on a Macbook Pro running MacOS High Sierra and on Windows 7 Professional. The script loads and runs successfully on all these OSes.


========================
Error Message Management
========================

FigureShader will display known, trapped error messages in a dialogue instead of the Info panel and on the console.   **However, untrapped Python error messages will still show up on the System Console as well as in a temporary popup, and will be Python-esque and seemingly unfriendly.**  I have endeavoured to trap for most errors: however, some will probably still slip through. For that reason, if you expect something to happen and doesn't, the system console is your friend. I tend to run Blender from a Terminal window in Linux (Blenderites know this as the console), so I check there for error messages. In Windows, you can toggle the System Console under: (Menu) Window > Toggle System Console. Mac users, please refer to the `Mac user help <http://blender.stackexchange.com/questions/6173/where-does-console-output-go>`_ page.





*******************
Resources and Video
*******************

=============
A Short Video
=============

I apologise for the voice: it was the best I could do under the circumstances. Please click on the image to start the video in your browser.

**Exporting a simple figure from Poser**

.. image:: http://www.tightbytes.com/images/pubimages/blender/SeaChange.jpg

.. raw:: html

    <iframe width="640" height="360" src="http://www.tightbytes.com/Blender/InstrVideos/FigShader060-01b.mp4" frameborder="0" allowfullscreen></iframe>

